{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/actividad.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../shared/progress-bar/progress-bar.component\";\nfunction AddEditActividadComponent_app_progress_bar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progress-bar\");\n  }\n}\nfunction AddEditActividadComponent_div_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditActividadComponent_div_1_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombreActividad es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditActividadComponent_div_1_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo idTicketActividad es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditActividadComponent_div_1_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo idTicketActividad es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditActividadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEditActividadComponent_div_1_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addActividad());\n    });\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵtemplate(8, AddEditActividadComponent_div_1_span_8_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵtemplate(10, AddEditActividadComponent_div_1_span_10_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(11, \"input\", 10);\n    i0.ɵɵtemplate(12, AddEditActividadComponent_div_1_span_12_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(13, \"input\", 11);\n    i0.ɵɵtemplate(14, AddEditActividadComponent_div_1_span_14_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelementStart(15, \"div\", 12)(16, \"div\", 13)(17, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AddEditActividadComponent_div_1_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.goBack());\n    });\n    i0.ɵɵtext(18, \"Volver\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 13)(20, \"button\", 15);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.operacion, \" actividad\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.formActividad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r1.formActividad.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r1.formActividad.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r1.formActividad.get(\"nameActividad\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r1.formActividad.get(\"nameActividad\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r1.formActividad.get(\"idTicketActividad\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r1.formActividad.get(\"idTicketActividad\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r1.formActividad.get(\"pagado\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx_r1.formActividad.get(\"pagado\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.formActividad.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.operacion);\n  }\n}\nexport class AddEditActividadComponent {\n  constructor(fb, _actividadService, router, toastr, aRouter, _location) {\n    this.fb = fb;\n    this._actividadService = _actividadService;\n    this.router = router;\n    this.toastr = toastr;\n    this.aRouter = aRouter;\n    this._location = _location;\n    this.loading = false;\n    this.operacion = 'Añadir ';\n    this.formActividad = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      idUserActividad: [null, Validators.required],\n      name: ['', Validators.required],\n      nameActividad: ['', Validators.required],\n      idTicketActividad: [null, Validators.required],\n      pagado: ['', Validators.required]\n    });\n    this.idActividad = aRouter.snapshot.paramMap.get(\"idActividad\");\n  }\n  ngOnInit() {\n    if (this.idActividad != null) {\n      this.operacion = 'Actualizar ';\n      this.getActividad(this.idActividad);\n    }\n  }\n  goBack() {\n    this._location.back();\n  }\n  addActividad() {\n    const actividad = {\n      idUserActividad: this.formActividad.value.idUserActividad,\n      name: this.formActividad.value.name,\n      nameActividad: this.formActividad.value.nameActividad,\n      idTicketActividad: this.formActividad.value.idTicketActividad,\n      pagado: this.formActividad.value.pagado\n    };\n    this.loading = true;\n    if (this.idActividad !== null) {\n      //Es update\n      this._actividadService.updateActividad(this.idActividad, actividad).subscribe(() => {\n        this.toastr.info(`La acttividad ${actividad.nameActividad} fue actualizada con exito`, 'Actividad actualizada');\n        this.loading = false;\n        //if (this.idUser !== null) {\n        //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\n        //}\n        //else{\n        //this.router.navigate([`/producto`]);\n        // }\n        this.router.navigate([`/`]);\n      });\n    } else {\n      //Es crear\n      this._actividadService.createActividad(actividad).subscribe(data => {\n        this.toastr.success(`La actividad ${actividad.nameActividad} fue agregada con exito`, 'Actividad agregada');\n        this.loading = false;\n        this.idActividad = String(data._id);\n        //Es añadir el usuaio al ticket\n        //if (this.idTicket !== null) {\n        //this._usersService.insertProductoToTicket(this.idTicket,this.idUser).subscribe();\n        //}\n        //if (this.idTicket !== null) {\n        //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\n        //}else{\n        //this.router.navigate([`/producto`]);\n        //}\n        this.router.navigate([`/`]);\n      });\n    }\n  }\n  getActividad(id) {\n    this.loading = true;\n    this._actividadService.getActividad(id).subscribe(data => {\n      this.loading = false;\n      this.formActividad.patchValue({\n        idUserActividad: data.idUserActividad,\n        name: data.name,\n        nameActividad: data.nameActividad,\n        idTicketActividad: data.idTicketActividad,\n        pagado: data.pagado\n      });\n    });\n  }\n}\nAddEditActividadComponent.ɵfac = function AddEditActividadComponent_Factory(t) {\n  return new (t || AddEditActividadComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActividadService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Location));\n};\nAddEditActividadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditActividadComponent,\n  selectors: [[\"app-add-edit-actividad\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"row mt-1\", 4, \"ngIf\"], [1, \"row\", \"mt-1\"], [1, \"col-lg-4\", \"offset-lg-4\"], [1, \"card\", \"bg-secondary\", \"mb-3\", 2, \"max-width\", \"25rem\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Ingrese nombre\", 1, \"form-control\"], [\"formControlName\", \"nameActividad\", \"type\", \"text\", \"placeholder\", \"Ingrese el nombre de la actividad\", 1, \"form-control\"], [\"formControlName\", \"idTicketActividad\", \"type\", \"text\", \"placeholder\", \"Ingrese el id del ticket al que quieres acceder\", 1, \"form-control\"], [\"formControlName\", \"pagado\", \"type\", \"text\", \"placeholder\", \"Ingrese el id del ticket al que quieres acceder\", 1, \"form-control\"], [1, \"row\", \"mt-2\", \"text-center\"], [1, \"col-lg-6\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function AddEditActividadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddEditActividadComponent_app_progress_bar_0_Template, 1, 0, \"app-progress-bar\", 0);\n      i0.ɵɵtemplate(1, AddEditActividadComponent_div_1_Template, 22, 8, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.ProgressBarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddEditActividadComponent","constructor","fb","_actividadService","router","toastr","aRouter","_location","formActividad","group","idUserActividad","required","name","nameActividad","idTicketActividad","pagado","idActividad","snapshot","paramMap","get","ngOnInit","operacion","getActividad","goBack","back","addActividad","actividad","value","loading","updateActividad","subscribe","info","navigate","createActividad","data","success","String","_id","id","patchValue","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Ines\\Documents\\UPC 22-23 (Q2)\\EA\\MINIMO 1\\ExamenEA_Minimo1_Backoffice\\backOffice\\src\\app\\components\\add-edit-actividad\\add-edit-actividad.component.ts","C:\\Users\\Ines\\Documents\\UPC 22-23 (Q2)\\EA\\MINIMO 1\\ExamenEA_Minimo1_Backoffice\\backOffice\\src\\app\\components\\add-edit-actividad\\add-edit-actividad.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ID, Actividad } from 'src/app/interfaces/actividad';\n//import { ListUsersComponent } from '../list-productos/list-productos.component';\n\nimport { ActividadService } from 'src/app/services/actividad.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-add-edit-actividad',\n  templateUrl: './add-edit-actividad.component.html',\n  styleUrls: ['./add-edit-actividad.component.css']\n})\nexport class AddEditActividadComponent {\n  formActividad: FormGroup;\n  loading: boolean = false;\n  idActividad: string;\n  operacion: string = 'Añadir ';\n\n  constructor(private fb: FormBuilder,\n    private _actividadService: ActividadService,\n    private router: Router,\n    private toastr: ToastrService,\n    private aRouter: ActivatedRoute,\n    private _location: Location) {\n    this.formActividad = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      idUserActividad: [null, Validators.required],\n      name: ['', Validators.required],\n      nameActividad: ['', Validators.required],\n      idTicketActividad: [null, Validators.required],\n      pagado: ['', Validators.required] \n    })\n    this.idActividad = aRouter.snapshot.paramMap.get(\"idActividad\")!;\n\n  }\n  ngOnInit(): void {\n    if (this.idActividad != null) {\n      this.operacion = 'Actualizar ';\n      this.getActividad(this.idActividad);\n    }\n  }\n\n  goBack(){\n    this._location.back();\n  }\n\n\n  addActividad() {\n    const actividad: Actividad = {\n      idUserActividad: this.formActividad.value.idUserActividad,\n      name: this.formActividad.value.name,\n      nameActividad: this.formActividad.value.nameActividad,\n      idTicketActividad: this.formActividad.value.idTicketActividad,\n      pagado: this.formActividad.value.pagado,\n\n    }\n\n    this.loading = true;\n    if (this.idActividad !== null) {\n      //Es update\n      this._actividadService.updateActividad(this.idActividad, actividad).subscribe(() => {\n        this.toastr.info(`La acttividad ${actividad.nameActividad} fue actualizada con exito`, 'Actividad actualizada');\n        this.loading = false;\n        //if (this.idUser !== null) {\n          //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\n        //}\n        //else{\n          //this.router.navigate([`/producto`]);\n       // }\n       this.router.navigate([`/`]);\n       \n      })\n    } else {\n      //Es crear\n      this._actividadService.createActividad(actividad).subscribe((data:Actividad) => {\n        this.toastr.success(`La actividad ${actividad.nameActividad} fue agregada con exito`, 'Actividad agregada')\n        this.loading = false;\n        this.idActividad=String(data._id!);\n        \n        //Es añadir el usuaio al ticket\n        //if (this.idTicket !== null) {\n          //this._usersService.insertProductoToTicket(this.idTicket,this.idUser).subscribe();\n        //}\n\n        //if (this.idTicket !== null) {\n          //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\n        //}else{\n          //this.router.navigate([`/producto`]);\n        //}\n        this.router.navigate([`/`]);\n      })\n\n    }\n    \n  }\n\n  getActividad(id: string) {\n    this.loading = true;\n    this._actividadService.getActividad(id).subscribe((data: Actividad) => {\n      this.loading = false;\n      this.formActividad.patchValue({\n        idUserActividad: data.idUserActividad,\n        name: data.name,\n        nameActividad: data.nameActividad,\n        idTicketActividad: data.idTicketActividad,\n        pagado: data.pagado,\n      })\n    })\n  }\n\n}","<app-progress-bar *ngIf=\"loading\"></app-progress-bar>\n<div *ngIf=\"!loading\" class=\"row mt-1\">\n    <div class=\"col-lg-4 offset-lg-4\">\n        <div class=\"card bg-secondary mb-3\" style=\"max-width: 25rem;\">\n            <div class=\"card-header text-center\">{{operacion}} actividad</div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"formActividad\" (ngSubmit)=\"addActividad()\">\n                    <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese nombre\">\n                    <span *ngIf=\"formActividad.get('name')?.hasError('required') && formActividad.get('name')?.touched\">\n                        El campo nombre es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"nameActividad\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese el nombre de la actividad\">\n                    <span *ngIf=\"formActividad.get('nameActividad')?.hasError('required') && formActividad.get('nameActividad')?.touched\">\n                        El campo nombreActividad es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"idTicketActividad\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese el id del ticket al que quieres acceder\">\n                    <span *ngIf=\"formActividad.get('idTicketActividad')?.hasError('required') && formActividad.get('idTicketActividad')?.touched\">\n                        El campo idTicketActividad es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"pagado\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese el id del ticket al que quieres acceder\">\n                    <span *ngIf=\"formActividad.get('pagado')?.hasError('required') && formActividad.get('pagado')?.touched\">\n                        El campo idTicketActividad es <strong>requerido</strong>\n                    </span>\n                \n                    <div class=\"row mt-2 text-center\">\n                        <div class=\"col-lg-6\">\n                            <button (click)=\"goBack()\" type=\"button\" class=\"btn btn-secondary\">Volver</button>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <button [disabled]=\"formActividad.invalid\" type=\"submit\" class=\"btn btn-primary\">{{operacion}}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}